
plugins {
    id 'maven-publish'
}

apply plugin: 'java'

repositories {
    mavenLocal()
    mavenCentral()
}

configurations {
    lintOnly
    implementation.extendsFrom lintOnly
}

dependencies {
    implementation group: 'org.jetbrains', name: 'annotations', version: '23.0.0'
    lintOnly group: 'org.xjs', name: 'xjs-jel', version: '0.2'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.8.1'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.8.1'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8s.1'

    testImplementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    testImplementation group: 'org.openjdk.jmh', name: 'jmh-generator-annprocess', version: '1.33'
    testImplementation group: 'org.openjdk.jmh', name: 'jmh-core', version: '1.33'

    testAnnotationProcessor group: 'org.openjdk.jmh', name: 'jmh-generator-annprocess', version: '1.33'
}

compileJava {
    sourceCompatibility = 1.8
}

compileTestJava {
    sourceCompatibility = 16
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }
    test {
        java {
            srcDir 'src/test/java'
        }
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

tasks.withType(Test) {
    useJUnitPlatform()
    ignoreFailures = false
    failFast = false
}

jar {
    manifest {
        attributes(
            'XJS-Version': archiveVersion,
        )
    }
}

javadoc {
    options.tags = [ 'apiNote:a:API note' ]
}

artifacts {
    archives jar
    archives javadocJar
}

publishing {
    repositories {
        maven {
            name = 'GitHubPackages'
            url = 'https://maven.pkg.github.com/Exjson/xjs-core'
            credentials {
                username = System.getenv('GITHUB_ACTOR')
                password = System.getenv('GITHUB_TOKEN')
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            groupId = group
            artifactId = pom_artifact_id
            version = version

            pom {
                name = pom_name
                description = pom_description
                url = pom_url
            }

            from components.java
        }
    }
}
